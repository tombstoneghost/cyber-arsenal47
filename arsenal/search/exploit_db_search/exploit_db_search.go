package search

import (
	"encoding/csv"
	"fmt"
	"os"
	"path/filepath"
	"strings"
)

func SearchExploitDB(query string) {
	cwd, _ := os.Getwd()

	exploitDBFile := filepath.Join(cwd, "files", "files_exploits.csv")

	file, err := os.Open(exploitDBFile)
	if err != nil {
		fmt.Println("[-] Error opening Exploit-DB CSV:", err)
		return
	}
	defer file.Close()

	reader := csv.NewReader(file)
	records, err := reader.ReadAll()
	if err != nil {
		fmt.Println("[-] Error reading CSV:", err)
		return
	}

	found := false
	fmt.Printf("\n[!] Results for '%s':\n", query)
	for _, record := range records {
		if len(record) < 7 { // Ensure record has sufficient fields
			continue
		}

		exploitID := record[0]
		description := record[2]
		date := record[3]
		platform := record[5] // Platform column
		url := fmt.Sprintf("https://www.exploit-db.com/exploits/%s", exploitID)

		if strings.Contains(strings.ToLower(description), strings.ToLower(query)) || strings.Contains(strings.ToLower(platform), strings.ToLower(query)) {
			fmt.Printf("[+] ID: %s, Description: %s, Date: %s, Platform: %s, URL: %s\n", exploitID, description, date, platform, url)
			found = true
		}
	}

	if !found {
		fmt.Println("[-] No exploits found for your query.")
	}
}
